/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DAO, DAOInterface } from "../DAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ercContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_votingId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum DAO.VoteOption",
        name: "option",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "voteAmount",
        type: "uint256",
      },
    ],
    name: "Vote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_votingId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "VotingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_votingId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalVoted",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum DAO.VotingResult",
        name: "result",
        type: "uint8",
      },
    ],
    name: "VotingFinished",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "createVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegateAddress",
        type: "address",
      },
    ],
    name: "delegateVotesTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ercContract",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "votingId",
        type: "uint256",
      },
    ],
    name: "finishVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "votingId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voterAddress",
        type: "address",
      },
    ],
    name: "getAddressVote",
    outputs: [
      {
        internalType: "enum DAO.VoteOption",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "votingId",
        type: "uint256",
      },
    ],
    name: "getVotingDetail",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupplyAtCreation",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAgainst",
        type: "uint256",
      },
      {
        internalType: "enum DAO.VotingResult",
        name: "result",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumQuorumPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "votingId",
        type: "uint256",
      },
      {
        internalType: "enum DAO.VoteOption",
        name: "option",
        type: "uint8",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "votingId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "votingAddress",
        type: "address",
      },
      {
        internalType: "enum DAO.VoteOption",
        name: "option",
        type: "uint8",
      },
    ],
    name: "voteFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200268038038062002680833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200010f565b6000815190506200008f81620000f5565b92915050565b600060208284031215620000a857600080fd5b6000620000b8848285016200007e565b91505092915050565b6000620000ce82620000d5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010081620000c1565b81146200010c57600080fd5b50565b612561806200011f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063b6b55f2511610071578063b6b55f251461012a578063b91e899714610146578063bdc82d991461017e578063c4d0e4bf1461019a578063d1ab0c41146101b6578063ffba7b0b146101d4576100a9565b806311ecc508146100ae5780633ccfd60b146100cc578063432c46c6146100d6578063943e8216146100f2578063abe7c08e1461010e575b600080fd5b6100b6610204565b6040516100c39190611ded565b60405180910390f35b6100d4610209565b005b6100f060048036038101906100eb9190611697565b610360565b005b61010c600480360381019061010791906117f3565b610561565b005b61012860048036038101906101239190611716565b610570565b005b610144600480360381019061013f9190611716565b61094c565b005b610160600480360381019061015b9190611716565b610a67565b60405161017599989796959493929190611bf2565b60405180910390f35b61019860048036038101906101939190611645565b610c78565b005b6101b460048036038101906101af91906117a4565b610cf9565b005b6101be610ea5565b6040516101cb9190611b9a565b60405180910390f35b6101ee60048036038101906101e99190611768565b610ec9565b6040516101fb9190611bb5565b60405180910390f35b603281565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600201544211610292576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028990611d0d565b60405180910390fd5b6000816000015490506000826000018190555042826001018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610309929190611b71565b602060405180830381600087803b15801561032357600080fd5b505af1158015610337573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035b919061166e565b505050565b60006203f48090506000600260006001600081548092919061038190612180565b919050558152602001908152602001600020905060008160060160006101000a81548160ff021916908360038111156103e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550848160000190805190602001906104009291906113e3565b50428160010181905550818160020181905550838160060160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508281600701908051906020019061046e929190611469565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104d557600080fd5b505afa1580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d919061173f565b8160030181905550600180546105239190611ff1565b7fe9722cdfea16904f7c251713498b56fbb15389ba08f367afd2503b89c260e1b8866040516105529190611bd0565b60405180910390a25050505050565b61056c823383610f34565b5050565b8060006002600083815260200190815260200160002060010154116105ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c190611c8d565b60405180910390fd5b60006002600084815260200190815260200160002090506000816002015482600101546105f79190611f10565b905080421161063b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063290611dad565b60405180910390fd5b60006003811115610675577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8260060160009054906101000a900460ff1660038111156106bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146106ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f690611d4d565b60405180910390fd5b600080836005015484600401546107169190611f10565b9050600060646032866003015461072d9190611f97565b6107379190611f66565b905080821061076357846005015485600401541115610759576001925061075e565b600292505b610768565b600392505b828560060160006101000a81548160ff021916908360038111156107b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600160038111156107f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b83600381111561082d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156109095760008560060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16866007016040516108819190611aec565b6000604051808303816000865af19150503d80600081146108be576040519150601f19603f3d011682016040523d82523d6000602084013e6108c3565b606091505b5050905080610907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fe90611ced565b60405180910390fd5b505b867f97ca203159b9960795bc854a1cf165da55784bb792cd45b04a997b0996969e88838560405161093b929190611e08565b60405180910390a250505050505050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160000160008282546109a39190611f10565b9250508190555042816001018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a1093929190611b03565b602060405180830381600087803b158015610a2a57600080fd5b505af1158015610a3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a62919061166e565b505050565b606060008060008060008060006060896000600260008381526020019081526020016000206001015411610ad0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac790611c8d565b60405180910390fd5b6000600260008d8152602001908152602001600020905080600001816001015482600201548360030154846004015485600501548660060160009054906101000a900460ff168760060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688600701888054610b4b9061211d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b779061211d565b8015610bc45780601f10610b9957610100808354040283529160200191610bc4565b820191906000526020600020905b815481529060010190602001808311610ba757829003601f168201915b50505050509850808054610bd79061211d565b80601f0160208091040260200160405190810160405280929190818152602001828054610c039061211d565b8015610c505780601f10610c2557610100808354040283529160200191610c50565b820191906000526020600020905b815481529060010190602001808311610c3357829003601f168201915b505050505090509a509a509a509a509a509a509a509a509a5050509193959799909294969850565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610dc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbf90611d6d565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8c90611cad565b60405180910390fd5b610ea0838383610f34565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006002600084815260200190815260200160002060080160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b826000600260008381526020019081526020016000206001015411610f8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8590611c8d565b60405180910390fd5b60006002600086815260200190815260200160002090506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600082600201548360010154610ffe9190611f10565b9050428111611042576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103990611d2d565b60405180910390fd5b6000600281111561107c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8560028111156110b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156110f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ed90611dcd565b60405180910390fd5b60006002811115611130577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8360080160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660028111156111b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146111f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ee90611d8d565b60405180910390fd5b60008260000154905060018111611243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123a90611ccd565b60405180910390fd5b858460080160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360028111156112cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506001600281111561130c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b866002811115611345577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561136b578084600401600082825461135f9190611f10565b92505081905550611387565b8084600501600082825461137f9190611f10565b925050819055505b826002015482111561139d578183600201819055505b877f86f3fc303848d79e408c838630014031d0442602a980c1ee15562bc7578ac6e28888846040516113d193929190611b3a565b60405180910390a25050505050505050565b8280546113ef9061211d565b90600052602060002090601f0160209004810192826114115760008555611458565b82601f1061142a57805160ff1916838001178555611458565b82800160010185558215611458579182015b8281111561145757825182559160200191906001019061143c565b5b50905061146591906114ef565b5090565b8280546114759061211d565b90600052602060002090601f01602090048101928261149757600085556114de565b82601f106114b057805160ff19168380011785556114de565b828001600101855582156114de579182015b828111156114dd5782518255916020019190600101906114c2565b5b5090506114eb91906114ef565b5090565b5b808211156115085760008160009055506001016114f0565b5090565b600061151f61151a84611e56565b611e31565b90508281526020810184848401111561153757600080fd5b6115428482856120db565b509392505050565b600061155d61155884611e87565b611e31565b90508281526020810184848401111561157557600080fd5b6115808482856120db565b509392505050565b600081359050611597816124d6565b92915050565b6000815190506115ac816124ed565b92915050565b600082601f8301126115c357600080fd5b81356115d384826020860161150c565b91505092915050565b6000813590506115eb81612504565b92915050565b600082601f83011261160257600080fd5b813561161284826020860161154a565b91505092915050565b60008135905061162a81612514565b92915050565b60008151905061163f81612514565b92915050565b60006020828403121561165757600080fd5b600061166584828501611588565b91505092915050565b60006020828403121561168057600080fd5b600061168e8482850161159d565b91505092915050565b6000806000606084860312156116ac57600080fd5b600084013567ffffffffffffffff8111156116c657600080fd5b6116d2868287016115f1565b93505060206116e386828701611588565b925050604084013567ffffffffffffffff81111561170057600080fd5b61170c868287016115b2565b9150509250925092565b60006020828403121561172857600080fd5b60006117368482850161161b565b91505092915050565b60006020828403121561175157600080fd5b600061175f84828501611630565b91505092915050565b6000806040838503121561177b57600080fd5b60006117898582860161161b565b925050602061179a85828601611588565b9150509250929050565b6000806000606084860312156117b957600080fd5b60006117c78682870161161b565b93505060206117d886828701611588565b92505060406117e9868287016115dc565b9150509250925092565b6000806040838503121561180657600080fd5b60006118148582860161161b565b9250506020611825858286016115dc565b9150509250929050565b61183881612025565b82525050565b600061184982611ecd565b6118538185611ee3565b93506118638185602086016120ea565b61186c816122b4565b840191505092915050565b600081546118848161211d565b61188e8186611ef4565b945060018216600081146118a957600181146118ba576118ed565b60ff198316865281860193506118ed565b6118c385611eb8565b60005b838110156118e5578154818901526001820191506020810190506118c6565b838801955050505b50505092915050565b6118ff81612093565b82525050565b61190e816120b7565b82525050565b61191d816120c9565b82525050565b600061192e82611ed8565b6119388185611eff565b93506119488185602086016120ea565b611951816122b4565b840191505092915050565b6000611969601083611eff565b9150611974826122c5565b602082019050919050565b600061198c602083611eff565b9150611997826122ee565b602082019050919050565b60006119af602083611eff565b91506119ba82612317565b602082019050919050565b60006119d2601e83611eff565b91506119dd82612340565b602082019050919050565b60006119f5601583611eff565b9150611a0082612369565b602082019050919050565b6000611a18601783611eff565b9150611a2382612392565b602082019050919050565b6000611a3b601783611eff565b9150611a46826123bb565b602082019050919050565b6000611a5e603a83611eff565b9150611a69826123e4565b604082019050919050565b6000611a81601883611eff565b9150611a8c82612433565b602082019050919050565b6000611aa4601383611eff565b9150611aaf8261245c565b602082019050919050565b6000611ac7600c83611eff565b9150611ad282612485565b602082019050919050565b611ae681612089565b82525050565b6000611af88284611877565b915081905092915050565b6000606082019050611b18600083018661182f565b611b25602083018561182f565b611b326040830184611add565b949350505050565b6000606082019050611b4f600083018661182f565b611b5c6020830185611905565b611b696040830184611add565b949350505050565b6000604082019050611b86600083018561182f565b611b936020830184611add565b9392505050565b6000602082019050611baf60008301846118f6565b92915050565b6000602082019050611bca6000830184611905565b92915050565b60006020820190508181036000830152611bea8184611923565b905092915050565b6000610120820190508181036000830152611c0d818c611923565b9050611c1c602083018b611add565b611c29604083018a611add565b611c366060830189611add565b611c436080830188611add565b611c5060a0830187611add565b611c5d60c0830186611914565b611c6a60e083018561182f565b818103610100830152611c7d818461183e565b90509a9950505050505050505050565b60006020820190508181036000830152611ca68161195c565b9050919050565b60006020820190508181036000830152611cc68161197f565b9050919050565b60006020820190508181036000830152611ce6816119a2565b9050919050565b60006020820190508181036000830152611d06816119c5565b9050919050565b60006020820190508181036000830152611d26816119e8565b9050919050565b60006020820190508181036000830152611d4681611a0b565b9050919050565b60006020820190508181036000830152611d6681611a2e565b9050919050565b60006020820190508181036000830152611d8681611a51565b9050919050565b60006020820190508181036000830152611da681611a74565b9050919050565b60006020820190508181036000830152611dc681611a97565b9050919050565b60006020820190508181036000830152611de681611aba565b9050919050565b6000602082019050611e026000830184611add565b92915050565b6000604082019050611e1d6000830185611add565b611e2a6020830184611914565b9392505050565b6000611e3b611e4c565b9050611e47828261214f565b919050565b6000604051905090565b600067ffffffffffffffff821115611e7157611e70612285565b5b611e7a826122b4565b9050602081019050919050565b600067ffffffffffffffff821115611ea257611ea1612285565b5b611eab826122b4565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611f1b82612089565b9150611f2683612089565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f5b57611f5a6121c9565b5b828201905092915050565b6000611f7182612089565b9150611f7c83612089565b925082611f8c57611f8b6121f8565b5b828204905092915050565b6000611fa282612089565b9150611fad83612089565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611fe657611fe56121c9565b5b828202905092915050565b6000611ffc82612089565b915061200783612089565b92508282101561201a576120196121c9565b5b828203905092915050565b600061203082612069565b9050919050565b60008115159050919050565b6000819050612051826124ae565b919050565b6000819050612064826124c2565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061209e826120a5565b9050919050565b60006120b082612069565b9050919050565b60006120c282612043565b9050919050565b60006120d482612056565b9050919050565b82818337600083830152505050565b60005b838110156121085780820151818401526020810190506120ed565b83811115612117576000848401525b50505050565b6000600282049050600182168061213557607f821691505b6020821081141561214957612148612256565b5b50919050565b612158826122b4565b810181811067ffffffffffffffff8211171561217757612176612285565b5b80604052505050565b600061218b82612089565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156121be576121bd6121c9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f566f74696e67206e6f7420666f756e6400000000000000000000000000000000600082015250565b7f596f752063616e6e6f7420766f746520666f7220746869732061646472657373600082015250565b7f42616c616e6365206973206e6f7420656e6f75676820666f7220766f74696e67600082015250565b7f566f74696e672066696e697368656420756e7375636365737366756c6c790000600082015250565b7f546f6f206561726c7920746f2077697468647261770000000000000000000000600082015250565b7f566f74696e6720697320616c726561647920656e646564000000000000000000600082015250565b7f566f74696e6720616c72656164792066696e6973686564000000000000000000600082015250565b7f54686973206164647265737320646964206e6f742064656c656761746520686960008201527f7320766f74657320746f20616e79206164647265737320796574000000000000602082015250565b7f5468652061647265737320616c726561647920766f7465640000000000000000600082015250565b7f546f6f206561726c7920746f2066696e69736800000000000000000000000000600082015250565b7f496e76616c696420766f74650000000000000000000000000000000000000000600082015250565b600381106124bf576124be612227565b5b50565b600481106124d3576124d2612227565b5b50565b6124df81612025565b81146124ea57600080fd5b50565b6124f681612037565b811461250157600080fd5b50565b6003811061251157600080fd5b50565b61251d81612089565b811461252857600080fd5b5056fea26469706673582212201585bb33dc2fc6c4526dd4854aa3782dd67ae5718f5b5c7215f975e20f79208164736f6c63430008040033";

type DAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAO__factory extends ContractFactory {
  constructor(...args: DAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _ercContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DAO> {
    return super.deploy(_ercContract, overrides || {}) as Promise<DAO>;
  }
  getDeployTransaction(
    _ercContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ercContract, overrides || {});
  }
  attach(address: string): DAO {
    return super.attach(address) as DAO;
  }
  connect(signer: Signer): DAO__factory {
    return super.connect(signer) as DAO__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new utils.Interface(_abi) as DAOInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DAO {
    return new Contract(address, _abi, signerOrProvider) as DAO;
  }
}
